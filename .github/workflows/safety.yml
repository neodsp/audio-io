name: 🧹 Safety Checks

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  sanitizers:
    name: 🩸 Leak and 🔍 Address Sanitizers
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: |
          # to get the symbolizer for debug symbol resolution
          sudo apt install llvm
          # to fix buggy leak analyzer:
          # https://github.com/japaric/rust-san#unrealiable-leaksanitizer
          # ensure there's a profile.dev section
          if ! grep -qE '^[ \t]*[profile.dev]' Cargo.toml; then
              echo >> Cargo.toml
              echo '[profile.dev]' >> Cargo.toml
          fi
          # remove pre-existing opt-levels in profile.dev
          sed -i '/^\s*\[profile.dev\]/,/^\s*\[/ {/^\s*opt-level/d}' Cargo.toml
          # now set opt-level to 1
          sed -i '/^\s*\[profile.dev\]/a opt-level = 1' Cargo.toml
          cat Cargo.toml
      - run: cargo test --lib --tests --target x86_64-unknown-linux-gnu
        env:
          ASAN_OPTIONS: "detect_odr_violation=0:detect_leaks=0"
          RUSTFLAGS: "-Z sanitizer=address"
      - run: cargo test --target x86_64-unknown-linux-gnu
        env:
          LSAN_OPTIONS: "suppressions=lsan-suppressions.txt"
          RUSTFLAGS: "-Z sanitizer=leak"

  miri:
    name: 🔮 Miri UB Checker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo "NIGHTLY=nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/miri)" >> "$GITHUB_ENV"
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY }}
          components: miri
      - run: cargo miri test --lib --bins --tests
